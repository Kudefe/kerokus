{"version":3,"sources":["../../server/controllers/adminRegister.js"],"names":["adminRegister","get","req","res","find","err","admin","length","render","flash","redirect","post","name","body","username","email","password","password2","checkBody","notEmpty","isEmail","equals","error","validationErrors","console","log","newAdmin","genSalt","salt","hash","save"],"mappings":";;;;;;AAAA;;;;AACA;;;;AACA;;;;;;AAEA,IAAMA,gBAAgB,EAAtB;;AAEAA,cAAcC,GAAd,GAAoB,UAACC,GAAD,EAAMC,GAAN,EAAc;AAChC;AACA,kBAAMC,IAAN,CAAW,EAAX,EAAe,UAACC,GAAD,EAAMC,KAAN,EAAgB;AAC7B,QAAIA,MAAMC,MAAN,IAAgB,CAApB,EAAuB;AACrBJ,UAAIK,MAAJ,CAAW,gBAAX;AACD,KAFD,MAEO;AACLL,UAAIM,KAAJ,CAAU,OAAV,EAAmB,iBAAnB;AACAN,UAAIO,QAAJ,CAAa,cAAb;AACD;AACF,GAPD;AASD,CAXD;;AAaAV,cAAcW,IAAd,GAAqB,UAACT,GAAD,EAAMC,GAAN,EAAc;AACjC,MAAMS,OAAOV,IAAIW,IAAJ,CAASD,IAAtB;AACA,MAAME,WAAWZ,IAAIW,IAAJ,CAASC,QAA1B;AACA,MAAMC,QAAQb,IAAIW,IAAJ,CAASE,KAAvB;AACA,MAAMC,WAAWd,IAAIW,IAAJ,CAASG,QAA1B;AACA,MAAMC,YAAYf,IAAIW,IAAJ,CAASI,SAA3B;;AAEAf,MAAIgB,SAAJ,CAAc,MAAd,EAAsB,kBAAtB,EAA0CC,QAA1C;AACAjB,MAAIgB,SAAJ,CAAc,UAAd,EAA0B,sBAA1B,EAAkDC,QAAlD;AACAjB,MAAIgB,SAAJ,CAAc,OAAd,EAAuB,mBAAvB,EAA4CC,QAA5C;AACAjB,MAAIgB,SAAJ,CAAc,OAAd,EAAuB,oBAAvB,EAA6CE,OAA7C;AACAlB,MAAIgB,SAAJ,CAAc,UAAd,EAA0B,sBAA1B,EAAkDC,QAAlD;AACAjB,MAAIgB,SAAJ,CAAc,WAAd,EAA2B,uBAA3B,EAAoDG,MAApD,CAA2DnB,IAAIW,IAAJ,CAASG,QAApE;;AAEA,MAAIM,QAAQpB,IAAIqB,gBAAJ,EAAZ;;AAEA,MAAID,KAAJ,EAAW;AACTE,YAAQC,GAAR,CAAYH,KAAZ;AACAnB,QAAIM,KAAJ,CAAU,QAAV,EAAoB,uBAApB;AACAN,QAAIK,MAAJ,CAAW,gBAAX,EAA6B;AAC3Bc,aAAOA;AADoB,KAA7B;AAGD,GAND,MAMO;AACL,QAAII,WAAW,oBAAU;AACvBd,YAAKA,IADkB;AAEvBE,gBAASA,QAFc;AAGvBC,aAAMA,KAHiB;AAIvBC,gBAASA;AAJc,KAAV,CAAf;;AAOA,uBAAOW,OAAP,CAAe,EAAf,EAAmB,UAACtB,GAAD,EAAMuB,IAAN,EAAe;AAChC,yBAAOC,IAAP,CAAYH,SAASV,QAArB,EAA+BY,IAA/B,EAAqC,UAACvB,GAAD,EAAMwB,IAAN,EAAe;AAClD,YAAIxB,GAAJ,EAAS;AACPmB,kBAAQF,KAAR,CAAcjB,GAAd;AACD,SAFD,MAEO;AACLqB,mBAASV,QAAT,GAAoBa,IAApB;AACAH,mBAASI,IAAT,CAAc,UAACzB,GAAD,EAAS;AACrB,gBAAIA,GAAJ,EAAS;AACPmB,sBAAQF,KAAR,CAAcjB,GAAd;AACD,aAFD,MAEO;AACLF,kBAAIM,KAAJ,CAAU,SAAV,EAAqB,cAArB;AACAN,kBAAIO,QAAJ,CAAa,SAAb;AACD;AACF,WAPD;AAQD;AACF,OAdD;AAeD,KAhBD;AAkBD;AACF,CAjDD;;kBAmDeV,a","file":"adminRegister.js","sourcesContent":["import mongoose from 'mongoose'\r\nimport Admin from './../models/admin'\r\nimport bcrypt from 'bcryptjs'\r\n\r\nconst adminRegister = {}\r\n\r\nadminRegister.get = (req, res) => {\r\n  //TODO: if ya hay admin, res.render /login/\r\n  Admin.find({}, (err, admin) => {\r\n    if (admin.length <= 0) {\r\n      res.render('admin_register')\r\n    } else {\r\n      res.flash('error', 'Ya existe Admin')\r\n      res.redirect('/admin/login')\r\n    }\r\n  })\r\n\r\n}\r\n\r\nadminRegister.post = (req, res) => {\r\n  const name = req.body.name\r\n  const username = req.body.username\r\n  const email = req.body.email\r\n  const password = req.body.password\r\n  const password2 = req.body.password2\r\n\r\n  req.checkBody('name', 'Name is required').notEmpty()\r\n  req.checkBody('username', 'Username is required').notEmpty()\r\n  req.checkBody('email', 'Email is required').notEmpty()\r\n  req.checkBody('email', 'email is not valid').isEmail()\r\n  req.checkBody('password', 'password is required').notEmpty()\r\n  req.checkBody('password2', 'password do not match').equals(req.body.password)\r\n\r\n  let error = req.validationErrors();\r\n\r\n  if (error) {\r\n    console.log(error);\r\n    res.flash('errors', 'Errores en los campos')\r\n    res.render('admin_register', {\r\n      error: error\r\n    })\r\n  } else {\r\n    let newAdmin = new Admin({\r\n      name:name,\r\n      username:username,\r\n      email:email,\r\n      password:password\r\n    })\r\n\r\n    bcrypt.genSalt(10, (err, salt) => {\r\n      bcrypt.hash(newAdmin.password, salt, (err, hash) => {\r\n        if (err) {\r\n          console.error(err);\r\n        } else {\r\n          newAdmin.password = hash\r\n          newAdmin.save((err) => {\r\n            if (err) {\r\n              console.error(err);\r\n            } else {\r\n              res.flash('success', \"Admin creado\")\r\n              res.redirect('/admin/')\r\n            }\r\n          })\r\n        }\r\n      })\r\n    })\r\n\r\n  }\r\n}\r\n\r\nexport default adminRegister\r\n"]}