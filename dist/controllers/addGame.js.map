{"version":3,"sources":["../../server/controllers/addGame.js"],"names":["addGame","get","req","res","render","post","checkBody","notEmpty","errors","validationErrors","flash","game","title","body","title2","author","units","companyName","published","imageOne","imageTwo","save","err","console","error","redirect"],"mappings":";;;;;;AAAA;;;;AACA;;;;AACA;;;;;;AAEA,IAAMA,UAAU,EAAhB;;AAEAA,QAAQC,GAAR,GAAc,UAACC,GAAD,EAAMC,GAAN,EAAc;AAC1BA,MAAIC,MAAJ,CAAW,SAAX;AACD,CAFD;;AAIAJ,QAAQK,IAAR,GAAe,UAACH,GAAD,EAAMC,GAAN,EAAc;AAC3BD,MAAII,SAAJ,CAAc,OAAd,EAAuB,mBAAvB,EAA4CC,QAA5C;AACAL,MAAII,SAAJ,CAAc,QAAd,EAAwB,oBAAxB,EAA8CC,QAA9C;AACAL,MAAII,SAAJ,CAAc,MAAd,EAAsB,kBAAtB,EAA0CC,QAA1C;AACAL,MAAII,SAAJ,CAAc,OAAd,EAAuB,mBAAvB,EAA4CC,QAA5C;AACAL,MAAII,SAAJ,CAAc,aAAd,EAA6B,0BAA7B,EAAyDC,QAAzD;AACAL,MAAII,SAAJ,CAAc,WAAd,EAA2B,uBAA3B,EAAoDC,QAApD;AACA;AACA;;AAEA;AACA,MAAIC,SAASN,IAAIO,gBAAJ,EAAb;;AAEA,MAAID,MAAJ,EAAY;AACVL,QAAIO,KAAJ,CAAU,OAAV,EAAmB,oBAAnB;AACAP,QAAIC,MAAJ,CAAW,SAAX,EAAsB;AACpBI,cAAQA;AADY,KAAtB;AAGD,GALD,MAKO;AACLL,QAAIO,KAAJ,CAAU,SAAV,EAAqB,gBAArB;AACA,QAAIC,OAAO,0BAAX;AACAA,SAAKC,KAAL,GAAaV,IAAIW,IAAJ,CAASD,KAAtB;AACAD,SAAKG,MAAL,GAAc,uBAAQH,KAAKC,KAAb,CAAd;AACAD,SAAKI,MAAL,GAAcb,IAAIW,IAAJ,CAASE,MAAvB;AACAJ,SAAKE,IAAL,GAAYX,IAAIW,IAAJ,CAASA,IAArB;AACAF,SAAKK,KAAL,GAAad,IAAIW,IAAJ,CAASG,KAAtB;AACAL,SAAKM,WAAL,GAAmBf,IAAIW,IAAJ,CAASI,WAA5B;AACAN,SAAKO,SAAL,GAAiBhB,IAAIW,IAAJ,CAASK,SAA1B;AACAP,SAAKQ,QAAL,GAAgBjB,IAAIW,IAAJ,CAASM,QAAzB;AACAR,SAAKS,QAAL,GAAgBlB,IAAIW,IAAJ,CAASO,QAAzB;;AAEAT,SAAKU,IAAL,CAAU,UAACC,GAAD,EAAS;AACjB,UAAIA,GAAJ,EAAS;AACPC,gBAAQC,KAAR,CAAcF,GAAd;AACD,OAFD,MAEO;AACLnB,YAAIsB,QAAJ,CAAa,iBAAb;AACD;AACF,KAND;AAOD;AACF,CAvCD;;kBAyCezB,O","file":"addGame.js","sourcesContent":["import mongoose from 'mongoose'\r\nimport Game from './../models/entrevista'\r\nimport slugify from './slugify/slugify'\r\n\r\nconst addGame = {}\r\n\r\naddGame.get = (req, res) => {\r\n  res.render('addGame')\r\n}\r\n\r\naddGame.post = (req, res) => {\r\n  req.checkBody('title', 'Title is required').notEmpty()\r\n  req.checkBody('author', 'Author is required').notEmpty()\r\n  req.checkBody('body', 'Body is required').notEmpty()\r\n  req.checkBody('units', 'Units is required').notEmpty()\r\n  req.checkBody('companyName', 'Company Name is required').notEmpty()\r\n  req.checkBody('published', 'Published is required').notEmpty()\r\n  // req.checkBody('imageOne', 'Image One is required').notEmpty()\r\n  // req.checkBody('imageTwo', 'Image Two is required').notEmpty()\r\n\r\n  //get errors\r\n  let errors = req.validationErrors()\r\n\r\n  if (errors) {\r\n    res.flash('error', 'Credenciales malas')\r\n    res.render('addGame', {\r\n      errors: errors\r\n    })\r\n  } else {\r\n    res.flash('success', \"juego aÃ±adido!\")\r\n    let game = new Game()\r\n    game.title = req.body.title\r\n    game.title2 = slugify(game.title)\r\n    game.author = req.body.author\r\n    game.body = req.body.body\r\n    game.units = req.body.units\r\n    game.companyName = req.body.companyName\r\n    game.published = req.body.published\r\n    game.imageOne = req.body.imageOne\r\n    game.imageTwo = req.body.imageTwo\r\n\r\n    game.save((err) => {\r\n      if (err) {\r\n        console.error(err);\r\n      } else {\r\n        res.redirect('/admin/add/game')\r\n      }\r\n    })\r\n  }\r\n}\r\n\r\nexport default addGame\r\n"]}